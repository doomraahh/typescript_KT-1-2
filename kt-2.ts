interface Reception {
  delivery(): boolean;
  receive(): void;
}

abstract class Publisher {
  constructor(
    protected title: string,
    protected author: string,
    protected pubYear: number,
    protected copies: number
  ) {}

  getTitle(): string {
    return this.title;
  }

  setTitle(title: string): void {
    this.title = title;
  }

  getAuthor(): string {
    return this.author;
  }

  setAuthor(author: string): void {
    this.author = author;
  }

  getPubYear(): number {
    return this.pubYear;
  }

  setPubYear(year: number): void {
    this.pubYear = year;
  }

  getCopies(): number {
    return this.copies;
  }

  setCopies(copies: number): void {
    this.copies = copies;
  }

  abstract toString(): string;
}

class Book extends Publisher implements Reception {
  constructor(
    title: string,
    author: string,
    pubYear: number,
    copies: number,
    private pages: number
  ) {
    super(title, author, pubYear, copies);
  }

  getPages(): number {
    return this.pages;
  }

  setPages(pages: number): void {
    this.pages = pages;
  }

  delivery(): boolean {
    if (this.copies > 0) {
      this.copies--;
      return true;
    }
    return false;
  }

  receive(): void {
    this.copies++;
  }

  toString(): string {
    return `–ö–Ω–∏–≥–∞: ${this.title} (${this.author}, ${this.pubYear}), —Å—Ç—Ä: ${this.pages}, —ç–∫–∑: ${this.copies}`;
  }
}

class Magazine extends Publisher implements Reception {
  constructor(
    title: string,
    author: string,
    pubYear: number,
    copies: number,
    private issue: number
  ) {
    super(title, author, pubYear, copies);
  }

  getIssue(): number {
    return this.issue;
  }

  setIssue(issue: number): void {
    this.issue = issue;
  }

  delivery(): boolean {
    if (this.copies > 0) {
      this.copies--;
      return true;
    }
    return false;
  }

  receive(): void {
    this.copies++;
  }

  toString(): string {
    return `–ñ—É—Ä–Ω–∞–ª: ${this.title} (${this.author}, ${this.pubYear}), –≤—ã–ø—É—Å–∫ ‚Ññ${this.issue}, —ç–∫–∑: ${this.copies}`;
  }
}

class Reader {
  private items: Publisher[] = [];
  private static MAX_ITEMS = 3;

  constructor(private firstName: string, private lastName: string) {}

  getFirstName(): string {
    return this.firstName;
  }

  setFirstName(name: string): void {
    this.firstName = name;
  }

  getLastName(): string {
    return this.lastName;
  }

  setLastName(name: string): void {
    this.lastName = name;
  }

  getItems(): Publisher[] {
    return this.items;
  }

  borrow(item: Publisher & Reception): void {
    if (this.items.length >= Reader.MAX_ITEMS) {
      console.log(`${this.firstName} –Ω–µ –º–æ–∂–µ—Ç –≤–∑—è—Ç—å –±–æ–ª—å—à–µ –∏–∑–¥–∞–Ω–∏–π.`);
      return;
    }

    if (item.delivery()) {
      this.items.push(item);
      console.log(`${this.firstName} –≤–∑—è–ª: ${item.getTitle()}`);
    } else {
      console.log(`–ò–∑–¥–∞–Ω–∏–µ "${item.getTitle()}" –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ.`);
    }
  }

  returnItem(item: Publisher & Reception): void {
    const index = this.items.indexOf(item);
    if (index !== -1) {
      item.receive();
      this.items.splice(index, 1);
      console.log(`${this.firstName} –≤–µ—Ä–Ω—É–ª: ${item.getTitle()}`);
    } else {
      console.log("–ò–∑–¥–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ —É —á–∏—Ç–∞—Ç–µ–ª—è.");
    }
  }

  toString(): string {
    const titles = this.items.map(i => i.getTitle()).join(', ') || "–Ω–∏—á–µ–≥–æ";
    return `–ß–∏—Ç–∞—Ç–µ–ª—å: ${this.firstName} ${this.lastName}, –Ω–∞ —Ä—É–∫–∞—Ö: ${titles}`;
  }
}

class Library {
  private items: Publisher[] = [];

  addItem(item: Publisher): void {
    this.items.push(item);
  }

  removeItem(item: Publisher): void {
    const index = this.items.indexOf(item);
    if (index !== -1) {
      this.items.splice(index, 1);
    }
  }

  showItems(): void {
    this.items.forEach(item => {
      console.log(item.toString());
    });
  }
}




const library = new Library();

const book1 = new Book("–í–æ–π–Ω–∞ –∏ –º–∏—Ä", "–¢–æ–ª—Å—Ç–æ–π", 1869, 2, 1225);
const book2 = new Book("–ú–∞—Å—Ç–µ—Ä –∏ –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞", "–ë—É–ª–≥–∞–∫–æ–≤", 1967, 1, 500);
const mag1 = new Magazine("–ù–∞—É–∫–∞ –∏ –∂–∏–∑–Ω—å", "–†–µ–¥–∞–∫—Ü–∏—è", 2024, 3, 6);

library.addItem(book1);
library.addItem(book2);
library.addItem(mag1);

console.log("–ò–∑–¥–∞–Ω–∏—è –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ:");
library.showItems();

const reader = new Reader("–ê–Ω–Ω–∞", "–ò–≤–∞–Ω–æ–≤–∞");

console.log("\–í—ã–¥–∞—á–∞:");
reader.borrow(book1);
reader.borrow(book2);
reader.borrow(mag1);
reader.borrow(book1); 

console.log("–°–æ—Å—Ç–æ—è–Ω–∏–µ —á–∏—Ç–∞—Ç–µ–ª—è:");
console.log(reader.toString());

console.log("\nüîÅ –í–æ–∑–≤—Ä–∞—Ç:");
reader.returnItem(book2);

console.log("\nüë© –ü–æ—Å–ª–µ –≤–æ–∑–≤—Ä–∞—Ç–∞:");
console.log(reader.toString());

console.log("\nüìö –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞:");
library.showItems();
